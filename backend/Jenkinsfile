pipeline {
	agent any

	environment
	{
		registry = "meriemnour/achat"
		registryCredential = 'dockerhub_id'
		dockerImage = ''
	}
	
	stages {
		
		stage('Maven')
        {
           		 steps {
               			 sh "mvn --version"
           			 }
        }
    
        stage('Compiler le projet') 
        {
            steps 
            {
                dir("backend") {// Compiler le projet en utilisant Maven
               sh 'mvn clean compile'
               }
            }
        }

         

		stage('BPackage')
        {
			steps 
            {
          		      dir("backend") 
                      {
                 		 sh "mvn clean package -DskipTests=true"
		 		         archive 'target/*.jar'
                      }
				
				
			}
		}


        stage('JUnit')
        {
			steps 
            {
          		      dir("backend") 
                      {
                 		 sh "mvn test"
		 		         
                      }
				
				
			}
		}

        

       /* stage('sonarqube')
        {
			steps{
                dir("backend")
                 {
				   withSonarQubeEnv(installationName: 'sonarqube')
                 {
				   sh "mvn sonar:sonar"
				 }
                }
			}
        }



        stage('Deploy')
        {
			steps 
            {
          		      dir("backend") 
                      {
                 		  sh "mvn deploy "
		 		         
                      }
				
				
			}
		}
*/

        stage('Docker image') 
        {
            steps 
            {
               dir("backend") 
               {
                 script{
                	dockerImage =  docker.build(registry )
                 }
               }
            }
        }



		stage('Deploy our image') 
		{
			steps{
				script 
				  {
					docker.withRegistry( '', registryCredential )
					  {
						dockerImage.push()
					  }
				   }
				}
		}


		/*stage('Cleaning up')
		{
           		 steps {
                			sh "docker rmi $registry:$BUILD_NUMBER"
            			}
       		 }*/
		
				
		stage ('Docker compose'){
            steps{

                script{
			
                    sh 'docker compose -f docker-compose.yml up -d'
                }

            }


        }		
			
		
	}
	post{
     	   always{
           	  emailext to: "meriem.nour.ghozzi00@gmail.com",
           	 subject: "jenkins build:${currentBuild.currentResult}: ${env.JOB_NAME}",
           	 body: "${currentBuild.currentResult}: Job ${env.JOB_NAME}\nMore Info can be found here: ${env.BUILD_URL}"
		 
        }
    }


}


